=== The Prompt

Now that you've learned about escapes and special characters you are in a position to understand how the prompt can be set up.


==== The PS1 Variable

Type this:

----
TODO$ bash
TODO$ PS1='My super prompt>>>>   '
TODO$ ls
TODO$ exit
----

As you'll remember, there are a bunch of 


==== The PS2 Variable

Now try this:

----
TODO$ bash
TODO$ PS2='I am in the middle of something!>>>  '
TODO$ cat > /dev/null << END
some text
END
TODO$ exit
----

The PS2 variable is the 'other' prompt, that the shell uses to indicate that you are being prompted for input to a program that is running.

==== PS3 and PS4

PS3 is used by the 'select' looping structure. We don't cover that here. TODO: but elsewhere?

PS4 is the last one:

----
TODO$ bash
TODO$ PS4='> Value of PWD is: $PWD'
TODO$ set -x
TODO$ pwd
TODO$ cd /tmp
TODO$ ls $(pwd)
TODO$ cd -
TODO$ exit
----

In 'trace' mode PS4 is echoed before each line of trace output.

But why is the '>' in echo repeated? This indicates the level of indirection (eg subshells) in the trace.

====
Things can get really confusing if you have commands in your prompt, or you have PROMPT_COMMAND set (see next section). If you don't fully understand the output of the above, don't panic!

==== PROMPT_COMMAND

Another way the prompt can be affected is with the bash variable 'PROMPT_COMMAND':

----
TODO
----

TODO

==== Pimp Your Prompt

TODO

For all the PS variables mentioned above, there are special escape values that can be used to make your prompt display interesting information.

----
bash etc TODO
TODO$ PS1='\u@\H:\w \# \$ '
exit etc TODO
----
              \#     the command number of this command
              \$     if the effective UID is 0, a #, otherwise a $
              \l     the basename of the shell's terminal device name
              \t     the current time in 24-hour HH:MM:SS format
              \H     the hostname
              \w     the current working directory, with $HOME abbreviated with a tilde
              \[     begin a sequence of non-printing characters, which could be used to embed a terminal control sequence into the prompt
              \]     end a sequence of non-printing characters

:q



==== What Next?                                                                                                                                             
                                                                                                                                                            
TODO

==== Cleanup

==== Exercises

1) TODO
Look up the other prompt escape characters.
