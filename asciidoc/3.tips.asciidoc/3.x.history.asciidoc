== History

We all know understanding history is important, and this is true in bash as well.

This section gives you a pragmatic overview of bash's history features, which can save you lots of time when at the terminal.

=== Bash and History

Bash keeps a history of commands you have run in a file. By default this is in your $HOME directory and has the name '.bash_history'.

It can be tedious to type out commands again and again, so bash offers several ways to save your effort.

Type this out:

----
TODO$ mkdir lbthw_history
TODO$ cd !$
TODO$ echo 'About bash history' > file1
TODO$ echo 'Another file' > file2
TODO$ grep About file1
TODO$ !!
TODO$ grep About file2
TODO$ grep Another !$
TODO$ rm file2
TODO$ !e
TODO$ !g
----

That introduced a few tricks you haven't necessarily seen before.





Event Designators
An event designator is a reference to a command line entry in the history list.
^string1^string2^ Quick substitution.  Repeat the last command, replacing string1 with string2.  Equivalent  to  ``!!:s/string1/string2/''  (see Modifiers below).



!:0-1
!:1-$


=== How to Learn Them


=== History Env Vars

HISTFILE The name of the file in which command history is saved (see HISTORY below).  The default value is ~/.bash_history.  If  unset, the command history is not saved when an interactive shell exits.
HISTSIZE The number of commands to remember in the command history (see HISTORY below).  The default value is 500.
HISTTIMEFORMAT If this variable is set and not null, its value is used as a format string for strftime(3) to print the time stamp  associated with  each  history  entry  displayed by the history builtin.  If this variable is set, time stamps are written to the history file so they may be preserved across shell sessions.

export HISTFILESIZE=1000000
export HISTSIZE=1000000
export HISTTIMEFORMAT="%d/%m/%y %T "


=== History Control

export HISTCONTROL=ignoredups:ignorespace
HISTCONTROL
A colon-separated list of values controlling how commands are saved on the history list.   If  the  list  of  values  includes ignorespace,  lines  which begin with a space character are not saved in the history list.  A value of ignoredups causes lines matching the previous history entry to not be saved.  A value of ignoreboth is shorthand for ignorespace  and  ignoredups.   A value of erasedups causes all previous lines matching the current line to be removed from the history list before that line is saved.  Any value not in the above list is ignored.  If HISTCONTROL is unset, or does not include a  valid  value,  all  lines read  by  the shell parser are saved on the history list, subject to the value of HISTIGNORE.  The second and subsequent lines of a multi-line compound command are not tested, and are added to the history regardless of the value of HISTCONTROL.


=== CTRL-R


==== What Next?

TODO
